name: SSH via Ngrok Access

on:
  workflow_dispatch:

jobs:
  start-vps:
    runs-on: ubuntu-latest
    steps:
    - name: Update & Install SSH
      run: |
        sudo apt update -y
        sudo apt install -y openssh-server curl wget unzip net-tools

    - name: Set root password
      run: |
        echo "root:12345678" | sudo chpasswd

    - name: Enable root login
      run: |
        sudo sed -i 's/^#PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
        sudo sed -i 's/^#PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
        sudo systemctl restart ssh

    - name: Download and configure ngrok
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | \
          sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | \
          sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install ngrok -y

    - name: Start Ngrok tunnel
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        ngrok config add-authtoken "$NGROK_AUTH_TOKEN"
        nohup ngrok tcp 22 --log=stdout > ngrok.log &
        sleep 10
        curl -s http://127.0.0.1:4040/api/tunnels > tunnels.json
        cat tunnels.json

    - name: Display connection info
      run: |
        echo "Username     : root"
        echo "Password     : 12345678"
        HOSTPORT=$(curl -s http://127.0.0.1:4040/api/tunnels | grep -oE 'tcp://[^"]+' | sed 's/tcp:\/\///')
        HOST=$(echo $HOSTPORT | cut -d: -f1)
        PORT=$(echo $HOSTPORT | cut -d: -f2)
        echo "Host/IP      : $HOST"
        echo "Port ssh     : $PORT"
        echo "Udp Custom   : $HOST:7300"
        echo "Port ssl/tls : $HOST:443"
        echo "Port non tls : $HOST:80"
        echo "Udpgw/Badvpn : $HOST:7300"
